//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Settings/Input/PlayerMain.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerMain : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerMain()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerMain"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""d70744b1-33d9-4606-90ff-07d124609701"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""948a4026-c25a-40b6-8207-0d4275c0842d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Screenspace Aim"",
                    ""type"": ""Value"",
                    ""id"": ""d6161fc7-3fca-44d3-aabd-d0a1f9325216"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Relative Aim"",
                    ""type"": ""Button"",
                    ""id"": ""3e77fdf9-eee9-45c2-b221-b3215c2ba68a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary"",
                    ""type"": ""Button"",
                    ""id"": ""1e85c9ec-d004-480d-b832-8f5b504cad60"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary"",
                    ""type"": ""Button"",
                    ""id"": ""030fc569-fc80-43f4-a8df-bb087c46bd9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""65eb16a4-2c0d-4d8e-96f8-1b9c797e81e0"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WSAD"",
                    ""id"": ""290c97ee-e6dd-435d-8e3d-2e07cd85f9da"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""23e48361-0596-4d9b-a1ac-97826b5cd194"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""59399dd4-671b-4ef2-b1a4-8017ee7b598d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e547406c-bd2e-481e-ad68-639a703ad56d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0821e1f4-9bbf-4af2-b2e2-ae495706cb38"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""bf793350-0ec7-40ef-a122-8c29afd753a2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5ba339d1-1800-4f2c-bdad-8e990735e46a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""31320387-01e4-44d2-aa6f-9c4df97a773d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""055602f1-a5e2-4a05-ba9c-44e9188bbe39"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b07197f3-d709-4ba3-9db6-f8a4e659f25a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""48d45814-962c-4d10-96d2-ce4e99efde72"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Screenspace Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0e5161f-1186-417b-90ec-9cd36da8fa7e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Relative Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""677d70c4-3277-4b68-b498-6da39f8173cc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dacf8092-3323-43c3-a5f0-47a24fc18e7f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Secondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""423ef6cf-2f37-4f99-b333-61365f3c885a"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_Movement = m_Main.FindAction("Movement", throwIfNotFound: true);
        m_Main_ScreenspaceAim = m_Main.FindAction("Screenspace Aim", throwIfNotFound: true);
        m_Main_RelativeAim = m_Main.FindAction("Relative Aim", throwIfNotFound: true);
        m_Main_Primary = m_Main.FindAction("Primary", throwIfNotFound: true);
        m_Main_Secondary = m_Main.FindAction("Secondary", throwIfNotFound: true);
        m_Main_Scroll = m_Main.FindAction("Scroll", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private IMainActions m_MainActionsCallbackInterface;
    private readonly InputAction m_Main_Movement;
    private readonly InputAction m_Main_ScreenspaceAim;
    private readonly InputAction m_Main_RelativeAim;
    private readonly InputAction m_Main_Primary;
    private readonly InputAction m_Main_Secondary;
    private readonly InputAction m_Main_Scroll;
    public struct MainActions
    {
        private @PlayerMain m_Wrapper;
        public MainActions(@PlayerMain wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Main_Movement;
        public InputAction @ScreenspaceAim => m_Wrapper.m_Main_ScreenspaceAim;
        public InputAction @RelativeAim => m_Wrapper.m_Main_RelativeAim;
        public InputAction @Primary => m_Wrapper.m_Main_Primary;
        public InputAction @Secondary => m_Wrapper.m_Main_Secondary;
        public InputAction @Scroll => m_Wrapper.m_Main_Scroll;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void SetCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMovement;
                @ScreenspaceAim.started -= m_Wrapper.m_MainActionsCallbackInterface.OnScreenspaceAim;
                @ScreenspaceAim.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnScreenspaceAim;
                @ScreenspaceAim.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnScreenspaceAim;
                @RelativeAim.started -= m_Wrapper.m_MainActionsCallbackInterface.OnRelativeAim;
                @RelativeAim.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnRelativeAim;
                @RelativeAim.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnRelativeAim;
                @Primary.started -= m_Wrapper.m_MainActionsCallbackInterface.OnPrimary;
                @Primary.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnPrimary;
                @Primary.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnPrimary;
                @Secondary.started -= m_Wrapper.m_MainActionsCallbackInterface.OnSecondary;
                @Secondary.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnSecondary;
                @Secondary.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnSecondary;
                @Scroll.started -= m_Wrapper.m_MainActionsCallbackInterface.OnScroll;
                @Scroll.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnScroll;
                @Scroll.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnScroll;
            }
            m_Wrapper.m_MainActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @ScreenspaceAim.started += instance.OnScreenspaceAim;
                @ScreenspaceAim.performed += instance.OnScreenspaceAim;
                @ScreenspaceAim.canceled += instance.OnScreenspaceAim;
                @RelativeAim.started += instance.OnRelativeAim;
                @RelativeAim.performed += instance.OnRelativeAim;
                @RelativeAim.canceled += instance.OnRelativeAim;
                @Primary.started += instance.OnPrimary;
                @Primary.performed += instance.OnPrimary;
                @Primary.canceled += instance.OnPrimary;
                @Secondary.started += instance.OnSecondary;
                @Secondary.performed += instance.OnSecondary;
                @Secondary.canceled += instance.OnSecondary;
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
            }
        }
    }
    public MainActions @Main => new MainActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IMainActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnScreenspaceAim(InputAction.CallbackContext context);
        void OnRelativeAim(InputAction.CallbackContext context);
        void OnPrimary(InputAction.CallbackContext context);
        void OnSecondary(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
    }
}
